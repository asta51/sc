import numpy as np

class Perceptron:
    def __init__(s,n): s.w=np.zeros(n);s.b=0
    def p(s,x): return (np.dot(s.w,x)+s.b>0)*1
    def t(s,X,y,lr=0.1,e=100):
        for _ in range(e):
            for x,t in zip(X,y):
                e=t-s.p(x);s.w+=lr*e*x;s.b+=lr*e

c0,c1=np.array([[2,3],[3,2],[1,1]]),np.array([[5,7],[6,8],[7,6]])
X,y=np.vstack((c0,c1)),np.array([0]*3+[1]*3)
p=Perceptron(2);p.t(X,y)
for d in [[4,5],[2,2]]:print(f"Data {d} belongs to class {p.p(d)}")
